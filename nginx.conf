server {
    listen 80;
    server_name localhost;

    # Set root directory
    root /usr/share/nginx/html;
    index index.html index.htm;

    # Proxy API calls to backend
    location /api/ {
        proxy_pass http://backend:8000/api/;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_redirect off;
    }

    # Handle API proxy to backend for heatmap subpath
    location /heatmap/api/ {
        proxy_pass http://backend:8000/api/;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_redirect off;
    }

    # Handle /heatmap/static/ requests - these come from Apache proxy
    location /heatmap/static/ {
        alias /usr/share/nginx/html/static/;
        expires 1y;
        add_header Cache-Control "public, immutable";
        # Override the nosniff header for proper JS/CSS loading
        add_header X-Content-Type-Options "";
    }

    # Handle /static/ requests (when Apache strips /heatmap)
    location /static/ {
        alias /usr/share/nginx/html/static/;
        expires 1y;
        add_header Cache-Control "public, immutable";
        # Override the nosniff header for proper JS/CSS loading
        add_header X-Content-Type-Options "";
    }

    # Handle root level static files (React app)
    location / {
        try_files $uri $uri/ /index.html;
    }

    # Configure location for the heatmap path
    location /heatmap/ {
        try_files $uri $uri/ /index.html;
    }

    # Handle exact /heatmap path (without trailing slash)
    location = /heatmap {
        try_files /index.html =404;
    }

    # Error pages
    error_page 404 /index.html;

    # Security headers (but not for static assets)
    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header X-XSS-Protection "1; mode=block" always;
    # Only add nosniff for HTML content
    location ~* \.(html|htm)$ {
        add_header X-Content-Type-Options "nosniff" always;
        try_files $uri $uri/ /index.html;
    }

    # Gzip compression
    gzip on;
    gzip_vary on;
    gzip_min_length 1024;
    gzip_comp_level 6;
    gzip_types
        text/plain
        text/css
        text/js
        text/xml
        text/javascript
        application/javascript
        application/xml+rss
        application/json;

    # Cache static assets
    location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg)$ {
        expires 1y;
        add_header Cache-Control "public, immutable";
    }
}
